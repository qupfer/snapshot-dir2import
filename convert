#!/bin/bash

main() {
    snapshotpath=$(realpath "$1")
    snapshotname=$(basename $snapshotpath)
    index_yaml=$(mktemp)
    backup_yaml=$(mktemp)
    source_backup_yaml=$(realpath "$(find "$snapshotpath" -iname backup.yaml)")
    sed -e '/^snapshots:/,/^[a-z]\+:/{/^[a-z]\+:/!d}' -e '/^volume_snapshots:/,/^[a-z]\+:/{/^[a-z]\+:/!d}' "$source_backup_yaml" > "$backup_yaml"
    machinename=$(sed -n '/^container:$/,/^[a-z]*:/p'  "$backup_yaml" | grep -i "^  name: " | cut -d" " -f4)
    load_prefix "$machinename"
    info=$(sed 's/^/  /' "$backup_yaml")
    sed -i "s/^name:.*/name: $machinename/g" "$index_yaml"

    if grep -sq "type: container" "$backup_yaml"; then
        container_tar
    
    elif grep -sq "type: virtual-machine" "$backup_yaml"; then
        vm_tar
    fi
        
    


}

container_tar () {
    printf "%s\n%s" "$container_prefix" "$info"  > "$index_yaml"
    tar -c -f "$PWD/${machinename}.tar"  --numeric-owner --xattrs --acls --exclude='backup.yaml' --transform "s#^./#backup/container/#" --transform "s#.*$(basename $index_yaml)#backup/index.yaml#" --transform "s#.*$(basename $backup_yaml)#backup/container/backup.yaml#" -C "$snapshotpath" . -C $(dirname "$index_yaml") $(basename "$index_yaml") -C $(dirname "$backup_yaml") $(basename "$backup_yaml")

}

vm_tar () {
    printf "%s\n%s" "$vm_prefix" "$info"  > "$index_yaml"
    tar -c -f "$PWD/${machinename}.tar"  --numeric-owner --xattrs --acls  --exclude='backup.yaml' --transform "s#^./#backup/virtual-machine/#" --transform "s#virtual-machine/root.img#virtual-machine.img#" --transform "s#.*$(basename $index_yaml)#backup/index.yaml#" --transform "s#.*$(basename $backup_yaml)#backup/virtual-machine/backup.yaml#" -C "$snapshotpath" . -C $(dirname "$index_yaml") $(basename "$index_yaml") -C $(dirname "$backup_yaml") $(basename "$backup_yaml")
}

load_prefix(){
container_prefix=$(cat <<-EOF
name: $1
backend: btrfs
pool: default
optimized: false
optimized_header: false
type: container
config:
EOF
)

vm_prefix=$(cat <<-EOF
name: $1
backend: btrfs
pool: default
optimized: false
optimized_header: false
type: virtual-machine
config:
EOF
)
}

main "$@"




exit 0